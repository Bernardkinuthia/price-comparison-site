name: Update Product Prices and Generate Static Site
on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:  # Manual trigger
  push:
    paths:
      - 'product_asin.csv'
      - 'index-template.html'  # Also trigger when template changes

jobs:
  update-prices:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        pip install pandas requests beautifulsoup4
        
    - name: Verify CSV file
      run: |
        if [ ! -f "product_asin.csv" ]; then
          echo "❌ CSV file not found"
          exit 1
        fi
        echo "✅ CSV file found"
        
    - name: Run Amazon API fetcher
      env:
        AMAZON_ACCESS_KEY: ${{ secrets.AMAZON_ACCESS_KEY }}
        AMAZON_SECRET_KEY: ${{ secrets.AMAZON_SECRET_KEY }}
        AMAZON_PARTNER_TAG: ${{ secrets.AMAZON_PARTNER_TAG }}
      run: |
        python scraper.py
        
    # NEW STEP: Generate static site instead of update_html.py
    - name: Setup Node.js for static site generation
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Generate static HTML with updated prices
      run: |
        node generate-static-site.js
        echo "✅ Static site generated with updated prices"
        
    - name: Commit results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add products.json index.html
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Update prices and regenerate static site via Amazon API $(date -u '+%Y-%m-%d %H:%M UTC')"
          git push
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Summary
      run: |
        if [ -f "products.json" ]; then
          echo "## 📊 API Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Data Source:** Amazon Product Advertising API" >> $GITHUB_STEP_SUMMARY
          TOTAL=$(python -c "import json; print(json.load(open('products.json'))['total_products'])" 2>/dev/null || echo "0")
          SUCCESS=$(python -c "import json; print(json.load(open('products.json'))['successful_prices'])" 2>/dev/null || echo "0")
          echo "- **Total products:** $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "- **Successful prices:** $SUCCESS" >> $GITHUB_STEP_SUMMARY
          echo "- **Success rate:** $(python -c "print(f'{$SUCCESS/$TOTAL*100:.1f}%')" 2>/dev/null || echo 'N/A')" >> $GITHUB_STEP_SUMMARY
          echo "- **Static site generated:** ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        fi
